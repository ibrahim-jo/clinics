[{"/home/ibr/Documents/drtest/src/index.js":"1","/home/ibr/Documents/drtest/src/reportWebVitals.js":"2","/home/ibr/Documents/drtest/src/App.js":"3","/home/ibr/Documents/drtest/src/config/fbconfig.js":"4","/home/ibr/Documents/drtest/src/store/reducers/rootReducer.js":"5","/home/ibr/Documents/drtest/src/component/dashbord/Dashbord.js":"6","/home/ibr/Documents/drtest/src/component/project/CreatProject.js":"7","/home/ibr/Documents/drtest/src/component/layout/Navbar.js":"8","/home/ibr/Documents/drtest/src/component/project/DetailsProject.js":"9","/home/ibr/Documents/drtest/src/component/project/Topdf.js":"10","/home/ibr/Documents/drtest/src/component/auth/SignUp.js":"11","/home/ibr/Documents/drtest/src/component/auth/SignIn.js":"12","/home/ibr/Documents/drtest/src/component/project/reserv.js":"13","/home/ibr/Documents/drtest/src/component/permition/Permision.js":"14","/home/ibr/Documents/drtest/src/store/reducers/drresvReducer.js":"15","/home/ibr/Documents/drtest/src/store/reducers/clincReducer.js":"16","/home/ibr/Documents/drtest/src/store/reducers/authReducer.js":"17","/home/ibr/Documents/drtest/src/store/reducers/projectReducer.js":"18","/home/ibr/Documents/drtest/src/component/dashbord/Notification.js":"19","/home/ibr/Documents/drtest/src/component/project/ProjectList.js":"20","/home/ibr/Documents/drtest/src/component/project/Editemodal.js":"21","/home/ibr/Documents/drtest/src/component/layout/SinedInLink.js":"22","/home/ibr/Documents/drtest/src/component/layout/SignedOutLink.js":"23","/home/ibr/Documents/drtest/src/component/project/Clinclist.js":"24","/home/ibr/Documents/drtest/src/component/project/Clincmodal.js":"25","/home/ibr/Documents/drtest/src/component/permition/Tableuser.js":"26","/home/ibr/Documents/drtest/src/component/project/Drclinc.js":"27","/home/ibr/Documents/drtest/src/store/actions/authAction.js":"28","/home/ibr/Documents/drtest/src/store/actions/projectActions.js":"29","/home/ibr/Documents/drtest/src/component/project/Editformik.js":"30","/home/ibr/Documents/drtest/src/component/project/Clincformik.js":"31","/home/ibr/Documents/drtest/src/component/permition/Table_Action.js":"32","/home/ibr/Documents/drtest/src/component/project/formikControl/FormikControl.js":"33","/home/ibr/Documents/drtest/src/component/project/formikControl/InputControl.js":"34","/home/ibr/Documents/drtest/src/component/project/ProjectSummary.js":"35","/home/ibr/Documents/drtest/src/component/project/report/Print.js":"36","/home/ibr/Documents/drtest/src/component/project/report/Toreport.js":"37","/home/ibr/Documents/drtest/src/component/project/report/printrepo1.js":"38","/home/ibr/Documents/drtest/src/component/project/report/Toreport1.js":"39"},{"size":2018,"mtime":1621523054966,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":1609183881883,"results":"42","hashOfConfig":"41"},{"size":1429,"mtime":1633631184949,"results":"43","hashOfConfig":"41"},{"size":701,"mtime":1611059808736,"results":"44","hashOfConfig":"41"},{"size":549,"mtime":1624030388157,"results":"45","hashOfConfig":"41"},{"size":3518,"mtime":1623442435200,"results":"46","hashOfConfig":"41"},{"size":2618,"mtime":1623083085285,"results":"47","hashOfConfig":"41"},{"size":752,"mtime":1611922616765,"results":"48","hashOfConfig":"41"},{"size":3476,"mtime":1633032289811,"results":"49","hashOfConfig":"41"},{"size":574,"mtime":1615126637678,"results":"50","hashOfConfig":"41"},{"size":2370,"mtime":1611863158986,"results":"51","hashOfConfig":"41"},{"size":1994,"mtime":1611776333025,"results":"52","hashOfConfig":"41"},{"size":2491,"mtime":1631642895838,"results":"53","hashOfConfig":"41"},{"size":1433,"mtime":1616169685807,"results":"54","hashOfConfig":"41"},{"size":314,"mtime":1624042556994,"results":"55","hashOfConfig":"41"},{"size":489,"mtime":1622486353941,"results":"56","hashOfConfig":"41"},{"size":996,"mtime":1611847396666,"results":"57","hashOfConfig":"41"},{"size":908,"mtime":1614451568483,"results":"58","hashOfConfig":"41"},{"size":1177,"mtime":1612468477652,"results":"59","hashOfConfig":"41"},{"size":2242,"mtime":1623082887523,"results":"60","hashOfConfig":"41"},{"size":1761,"mtime":1632941988718,"results":"61","hashOfConfig":"41"},{"size":829,"mtime":1618081384774,"results":"62","hashOfConfig":"41"},{"size":310,"mtime":1609934064322,"results":"63","hashOfConfig":"41"},{"size":2224,"mtime":1622822158837,"results":"64","hashOfConfig":"41"},{"size":1828,"mtime":1620050714472,"results":"65","hashOfConfig":"41"},{"size":2547,"mtime":1616434901967,"results":"66","hashOfConfig":"41"},{"size":3201,"mtime":1631643427893,"results":"67","hashOfConfig":"41"},{"size":1314,"mtime":1617998489219,"results":"68","hashOfConfig":"41"},{"size":3537,"mtime":1631643407557,"results":"69","hashOfConfig":"41"},{"size":2146,"mtime":1620402206502,"results":"70","hashOfConfig":"41"},{"size":2630,"mtime":1622572382873,"results":"71","hashOfConfig":"41"},{"size":1266,"mtime":1616441335229,"results":"72","hashOfConfig":"41"},{"size":332,"mtime":1619813153630,"results":"73","hashOfConfig":"41"},{"size":320,"mtime":1619872368703,"results":"74","hashOfConfig":"41"},{"size":2306,"mtime":1623085501350,"results":"75","hashOfConfig":"41"},{"size":575,"mtime":1633631194637,"results":"76","hashOfConfig":"41"},{"size":215,"mtime":1633630870468,"results":"77","hashOfConfig":"41"},{"size":706,"mtime":1633631765700,"results":"78","hashOfConfig":"41"},{"size":267,"mtime":1633631639507,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},"eddrp",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"83"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"83"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"83"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"83"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"83"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"83"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"83"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"83"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"83"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"83"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"83"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"83"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"83"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"83"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"83"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"83"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"172","messages":"173","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ibr/Documents/drtest/src/index.js",["176"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {applyMiddleware, createStore,compose} from 'redux';\nimport rootreducer from '../src/store/reducers/rootReducer'\nimport  { Provider, useSelector}from 'react-redux'\nimport {getFirebase,ReactReduxFirebaseProvider,isLoaded} from 'react-redux-firebase'\nimport thunk from 'redux-thunk' ;\nimport {createFirestoreInstance} from 'redux-firestore'\nimport firebase from '../src/config/fbconfig'\nimport { createMuiTheme , ThemeProvider} from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: purple[500],\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n});\n\n\nconst store=createStore(rootreducer, applyMiddleware(thunk.withExtraArgument({getFirebase})))\n  \nconst profileSpecificProps = {\n  userProfile: 'user',\n  useFirestoreForProfile: true,\n  updateProfileOnLogin: false,\n};\n\n\nconst rrfprop={\n  firebase,\n  config:profileSpecificProps,\n  dispatch:store.dispatch,\n  createFirestoreInstance\n\n} \n// for  wait  a firestore to send user data  use isload from react-redux-firebase\n   const AuthIsLoadd=({children})=>{\n     const auth= useSelector(state => state.firebase.auth)\n     if(!isLoaded(auth)) return <div>Loding Screen...</div>\n     return children\n\n   }\n////\nReactDOM.render(\n  \n  \n    <ThemeProvider theme={theme} >\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfprop}>\n        <AuthIsLoadd>\n    <App />\n    </AuthIsLoadd>\n    </ReactReduxFirebaseProvider>\n    </Provider>\n    </ThemeProvider>\n,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["177","178"],"/home/ibr/Documents/drtest/src/reportWebVitals.js",[],"/home/ibr/Documents/drtest/src/App.js",["179"],"import  react from 'react'\nimport {BrowserRouter,Switch,Route} from 'react-router-dom'\nimport Nav from './component/layout/Navbar'\nimport Dashbord from './component/dashbord/Dashbord'\nimport DetailsProject from './component/project/DetailsProject'\nimport SignIn from './component/auth/SignIn'\nimport SignUp from './component/auth/SignUp'\nimport CreateProject from './component/project/CreatProject'\nimport  Topdf from './component/project/Topdf'\nimport  Print  from './component/project/report/Print'\nimport  Printrepo1 from './component/project/report/printrepo1'\nimport permition from './component/permition/Permision'\nimport Reserv from './component/project/reserv'\nfunction App() {\n  return (\n   \n    <div className=\"App\">\n       <BrowserRouter>\n     <Nav />\n      <Switch>\n        <Route exact path='/' component={Dashbord} />\n        <Route   path='/project/:id'  component={DetailsProject}/>\n        <Route path='/signin' component={SignIn} />\n        <Route path='/signup' component={SignUp} />\n        <Route path='/create' component={CreateProject} />\n        <Route path ='/topdf/:id' component={Topdf} />\n        <Route path='/print/:id' component={Print} />\n        <Route path='/printrepo1/:id' component={Printrepo1} />\n        <Route path='/permison' component={permition} />\n        <Route path='/reserv/:id' component={Reserv} />\n      </Switch>\n   \n     </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/home/ibr/Documents/drtest/src/config/fbconfig.js",[],"/home/ibr/Documents/drtest/src/store/reducers/rootReducer.js",[],"/home/ibr/Documents/drtest/src/component/dashbord/Dashbord.js",["180","181"],"import React ,{Component,state} from 'react' ;\nimport Notification from './Notification'\nimport ProjectList from '../project/ProjectList'\nimport {connect} from 'react-redux'\nimport { firestoreConnect} from 'react-redux-firebase'\nimport {compose} from 'redux'\nimport {Redirect,Link} from 'react-router-dom'\nimport {snapdata} from '../../store/actions/projectActions'\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nclass Dashbord extends Component{\n\n    constructor(props){\n        super(props)\n        this.state={prodata:''}\n    }\n      \n  componentDidMount(){\n      const {snapdata}=this.props;\n\n      snapdata();\n  }\n \n   \n   \n    render(){\n       // console.log(this.props)\n      const {projects,auth,notifications,users,clinc,dr} =this.props\n         // console.log(\"tel me what\",notifications)\n          if(!auth.uid)return  <Redirect to='/signin' />\n       console.log('CL',clinc)\n\n          const x1=(users)=>{\n            const  projectarry=[]\n\n            console.log('the user admin is a',users)\n\n              if(users && users.length>0){\n                return (<ProjectList  projects={projects}/>)  \n              }\n              else{\n                projects && projects.map(project=>{\n                    if(project.authorId===auth.uid){\n                     projectarry.push(project)\n                     \n                 }})\n              }\n             return (\n                 <Typography component=\"div\">\n                     <Box  textAlign=\"center\" m={1}>\n                     {dr && dr[0]?<Link to={{pathname:'/reserv/'+dr[0].Id,state:{dr:dr[0]} }}>\n                    <Button variant=\"contained\" color=\"primary\">  RESERVIATION  </Button>\n                     </Link>:null}\n                     </Box>\n                   \n                    \n                     <ProjectList  projects={projectarry}/>\n                 </Typography>\n            \n             )\n\n\n          }\n          \n\n        \n         \n          \n        return(\n            <div className='dashbord container'> \n            <div className='row'>\n                <div className='col s12 m6'>\n                    { x1(users)}\n                </div>\n                <div className='col s12 m5 offset-m1'>\n                    <Notification notifications={notifications} />\n                </div>\n\n            </div>\n\n            </div>\n        )\n    }\n}\nconst mapStateToprops=(state)=>{\n   //console.log('dr',state.firestore.ordered.dr[0].Id);\n   return {\n       projects:state.firestore.ordered.projects,\n       auth:state.firebase.auth,\n       notifications:state.firestore.ordered.notifications,\n       users:state.firestore.ordered.user,\n       clinc:state.firestore.data.clinc,\n       dr:state.firestore.ordered.dr\n\n   }\n}\nconst mapDispatchToProps =(dispatch)=>{\n    return{\n        snapdata:()=>dispatch(snapdata())\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToprops,mapDispatchToProps),\n    firestoreConnect(ownProps=>{\n        //  console.log('DoctorCloinc is',ownProps)\n                \n         return([{collection:'projects',\n        orderBy:['createdAt','desc']},\n        {collection:'notifications',limit:3,orderBy:['time','desc']},\n        {collection:'user',where:[['Id','==',ownProps.auth.uid],['type','==','admin']]},\n        {collectionGroup:'clinc'},\n        {collection:'user', where:[['Id','==',ownProps.auth.uid],['type','==','dr'] ], storeAs: 'dr'\n           }\n        ])\n    })\n)(Dashbord) ;\n","/home/ibr/Documents/drtest/src/component/project/CreatProject.js",[],"/home/ibr/Documents/drtest/src/component/layout/Navbar.js",[],"/home/ibr/Documents/drtest/src/component/project/DetailsProject.js",["182","183","184","185","186"],"import React, { Component, useState, useEffect } from 'react'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { Link, Redirect, Route } from 'react-router-dom'\nimport moment from 'moment'\nimport PrintIcon from '@material-ui/icons/Print';\nimport  {Grid} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Editemodal from './Editemodal'\nimport ClincModal from './Clincmodal'\nimport Clinclist from './Clinclist'\nimport {snapclinc} from '../../store/actions/projectActions'\nimport arSA from 'date-fns/locale/ar-SA/index'\n\n//import M from 'materialize-css/dist/js/materialize.min.js'\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  icon: {\n    textAlign: 'center'\n  },\n}))\n\nfunction DetailsProject(props) {\n  const classes = useStyles()\n\n  const { project, auth, cl,snapclinc,reserv } = props\n  const { id } = props.match.params;\n  \n  const ar = cl ? Object.entries(cl) : []// convert obj to array\n\n   console.log('ar',ar)\n  const [x,setx] = useState([])\n  useEffect(() => {\nconsole.log('count')\n//console.log('id',snapclinc(id))\n\n    setx( ar)\n  },[cl,reserv])\n console.log('x',ar[0][0])\n\n\n  if (!auth.uid) return <Redirect to='/signin' />\n\n  if (project) {\n\n\n    return (\n\n\n      <div className='container section project-details'>\n        <div className='card z-depth-0'  >\n          <div className='card-content'  >\n\n            <span className='card-title' >\n            Name:  {project.name}\n            </span>\n            <ClincModal pId={id} />\n            <p>Mob:{project.mobile}</p>\n            <p> ID: {project.idn}</p>\n          </div>\n\n          <div className='card-action grey lighten-4 green-text'>\n\n            <div>posted by {project.authorFirstName} </div>\n            <div >  {moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n\n\n\n        </div>\n        <Clinclist list={x}  />\n\n\n      \n        <Grid container   spacing={3} className={classes.icon}>\n          <Grid xs={4} className={classes.icon}>\n          <Editemodal project={project} proid={id} />\n          </Grid>\n\n      <Grid    item  xs={4} className={classes.icon} >\n        <Link   to={{\n                     pathname:'/printrepo1/'+ar[0][0], state:{clinc:x}} }>\n        <PrintIcon />\n\n        </Link>\n      </Grid>\n\n      <Grid xs={4} className={classes.icon}>\n<Link to={{\n  pathname: '/topdf/' + id,\n  state: {\n    name: project.authorFirstName\n  }\n}}> PDF</Link>\n\n      </Grid>\n      </Grid>\n       \n\n\n      </div>\n\n    )\n  }\n  else {\n    return (\n      <div className='container center'><p> Loading....</p></div>\n    )\n  }\n\n\n}\n\nconst mapDispatchToProps =(dispatch)=>{\n  return{\n    snapclinc:(id)=>dispatch(snapclinc(id))\n  }\n}\nconst mapStateToprops = (state, ownprops) => {\n\n  const { id } = ownprops.match.params\n  console.log('own', state)\n  const projects = state.firestore.data.projects\n  const project = projects ? projects[id] : null\n  const cl = state.firestore.data.clinc;\n  console.log('obj1', cl)\n\n  return {\n    project: project,\n    auth: state.firebase.auth,\n    cl: cl,\n    reserv: state.reserv.addclinc\n  }\n}\n\n\n\nexport default compose(\n  connect(mapStateToprops,mapDispatchToProps),\n  firestoreConnect(owner => {\n    const { id } = owner.match.params\n    return (\n      [\n        { collection: 'projects' },\n        { collectionGroup: 'clinc', where: ['person', '==', id]}\n      ])\n  })\n)(DetailsProject)\n\n\n\n","/home/ibr/Documents/drtest/src/component/project/Topdf.js",[],"/home/ibr/Documents/drtest/src/component/auth/SignUp.js",[],"/home/ibr/Documents/drtest/src/component/auth/SignIn.js",[],"/home/ibr/Documents/drtest/src/component/project/reserv.js",["187","188","189","190","191"],"import { connect } from 'react-redux'\nimport {React,useEffect,useState} from 'react'\nimport {compose} from 'redux'\nimport {reservcl} from '../../store/actions/projectActions'\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Drclinc from './Drclinc'\n\nconst useStyles = makeStyles((theme) => ({\nroot: {\nflexGrow: 1,\nmarginTop:20,\nmarginLeft:160\n\n},\npaper: {\npadding: theme.spacing(2),\ntextAlign: 'center',\ncolor: theme.palette.text.secondary,\n},\n}));\nfunction Reserv(props) {\nconst classes = useStyles();\nconst drid= props.match.params.id\nconst {clinc}=props.location.state.dr\nconst {reservcl,drres,pationt}=props\n\nconst [state, setstate] = useState([])\nconst [user,setuser]=useState(JSON.parse(localStorage.getItem('user_cl')))\nconst [change,setchange]=useState(false)\n\nconst fetchdata=async()=> {\n\nconst data= await reservcl(clinc)\nif(data && data.length>0){\n\n}\ndata && data.forEach(item =>{\nconsole.log(\"you r in fetchData\",item)\n\n})\nsetstate(data)\n// return data\n}\n  const refresh=()=>{\n      setchange(true)\n  }\nuseEffect(() => {\nfetchdata()\nif(pationt){\n    localStorage.setItem('user_cl',JSON.stringify(pationt))\n    setuser(JSON.parse(localStorage.getItem('user_cl')))\n    } \n    if(change){\n        setchange(false)\n    }\n},[change])\n\n\n/// state.map(item =>{\n// console.log('item00',item) \n// })\nconsole.log('chan',state)\nstate && state.map(i => {\nconsole.log('id',i)\nreturn i\n})\n\nreturn (\n<Grid container className={classes.root} spacing={2} >\n<Grid item xs={9} >\n<Paper className={classes.paper}>\n</Paper>\n</Grid>\n<p> <Button variant=\"contained\" >Refreish</Button> </p> \n{state && state.map(c=>{\nconsole.log('cc',c.id)\nconsole.log('da',c.data().person)// review project action \nreturn user && user.map(u=>{\nconsole.log('user',u.name)\nreturn u.id ===c.data().person? <Grid item xs={9} key={u.id} > <Drclinc list={c} pationt={u}  stop={refresh}  /></Grid> :null\n})\n})}\n</Grid>\n)\n}\n\nconst mapDispatchToProps = (dispatch)=>{\nreturn{\nreservcl:(clinc)=>dispatch(reservcl(clinc))\n}\n\n}\n\nconst mapStateToProps = (state)=>{\nconsole.log('DRSTAT',state.drresvReducer.state)\nreturn{\ndrres:state.drresvReducer.state,\npationt:state.firestore.ordered.projects\n}\n}\n\nexport default compose(connect(mapStateToProps,mapDispatchToProps))(Reserv)\n\n","/home/ibr/Documents/drtest/src/component/permition/Permision.js",[],"/home/ibr/Documents/drtest/src/store/reducers/drresvReducer.js",[],"/home/ibr/Documents/drtest/src/store/reducers/clincReducer.js",["192"],"const INITIAL_STATE = {\n    reservation:[],\n    error:null,\n    addclinc:false,\n};\n \nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case 'CLINC':\n            return {...state,reservation:action.snapshot,error:null}\n            case 'NO_CLINC':\n                return{...state ,error:action.err.message}\n                case 'Addclinc':\n                    return {...state,addclinc:!state.addclinc }\n        default:\n            return state\n    }\n}","/home/ibr/Documents/drtest/src/store/reducers/authReducer.js",[],"/home/ibr/Documents/drtest/src/store/reducers/projectReducer.js",[],"/home/ibr/Documents/drtest/src/component/dashbord/Notification.js",[],"/home/ibr/Documents/drtest/src/component/project/ProjectList.js",["193"],"import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport {Link} from 'react-router-dom'\nimport {removeProject} from '../../store/actions/projectActions'\nimport {connect} from 'react-redux'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PrintIcon from '@material-ui/icons/Print';\nimport  {Grid} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Editemodal from './Editemodal'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    icon: {\n      textAlign: 'center'\n    },\n  }));\n  \nfunction ProjectList({projects,removeProject}) {\n    const classes = useStyles()\n  projects && projects.map(project=>{\n        console.log('DeletID',project)\n    });\n    const handleremove=(id)=>{\n       removeProject(id);\n    }\n  \n    return (\n        <div  className='project-list section'> \n        {projects && projects.map((project)=>{\n            return(\n             \n              <div key={project.id}>\n                      <Grid  container spacing={3}  className={classes.icon} >\n                     <Grid item xs={4} >\n                     <DeleteIcon  onClick={()=>handleremove(project.id)}  style={{cursor: 'pointer'}} />\n                     </Grid >   \n               <Grid  item  xs={4} className={classes.icon}  >\n                <Editemodal    project={project} />\n               </Grid>\n               <Grid  item  xs={4} className={classes.icon}  >\n                <Link  to={{pathname:'/print/'+project.id,\n                            state:{\n                              project:project\n                            }}}> \n                <PrintIcon />\n                </Link>\n               </Grid>\n               \n               </Grid>\n                \n              \n                <Link  to={'/project/'+ project.id} key={project.id} >\n               <ProjectSummary project={project}  proid={project.id}  />\n                \n                </Link>\n                </div>\n            )\n        })}\n                        \n        </div>\n    )\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n    return {\n        removeProject:id => dispatch(removeProject(id))\n\n    }\n\n}\n\nexport default connect(null,mapDispatchToProps) (ProjectList)\n","/home/ibr/Documents/drtest/src/component/project/Editemodal.js",[],"/home/ibr/Documents/drtest/src/component/layout/SinedInLink.js",["194","195"],"import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {signout} from '../../store/actions/authAction'\nfunction SinedInLink(props) {\n     const {type}= props.profile\n           console.log('index user',props)\n\n    return (\n        <ul className='right'>\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a  onClick={props.signout}>LogOut</a></li> \n           { type=='admin' ? <li><NavLink to='/permison' > Permistion </NavLink> </li> :null}\n            <li><NavLink to='/' className='btn btn-floating green lighten-1'>{props.profile.lastName}</NavLink></li>\n        </ul>\n    )\n}\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        signout:()=>dispatch(signout())\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(SinedInLink)\n","/home/ibr/Documents/drtest/src/component/layout/SignedOutLink.js",[],"/home/ibr/Documents/drtest/src/component/project/Clinclist.js",["196","197"],"import React ,{useState,useEffect}from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport moment from 'moment'\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }));\n\nfunction Clinclist({list}) {\n \n    const classes = useStyles();\n  \n            \n      return (\n        <div>\n             { list && list.map(c=>{\n               \n               return(\n\n                <div className={classes.root}  key={c[0]}  >\n                <Grid container spacing={2} >\n                  <Grid item xs={12}>\n                   <Paper className={classes.paper}>\n                     <Grid item xs={12} sm container>\n                       <Grid item>\n                         {c[1].done &&c[1].done? <CheckCircleIcon  color=\"secondary\" />:<CheckCircleIcon  />}\n                        \n                       </Grid>\n                     <Grid item xs container direction=\"column\" spacing={2}>\n                     <Grid item xs>\n                       <Typography gutterBottom variant= \"subtitle1\" >\n                     {c[1].name} \n                     </Typography>\n                     <Typography variant=\"body2\" gutterBottom>\n                      {moment(c[1].date.toDate()).calendar()}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" >\n                      {c[1].resip?c[1].resip:<span>no resip</span>}\n                </Typography>\n                     </Grid>\n                     \n                     </Grid>\n                     <Grid item>\n              <Typography variant=\"subtitle1\">${c[1].price}</Typography>\n            </Grid>\n                     </Grid>\n                     </Paper>\n                </Grid>\n                  </Grid>\n                 </div>\n                 \n               )  })\n              }\n             \n              </div>)\n       \n    \n}\n\nexport default Clinclist\n","/home/ibr/Documents/drtest/src/component/project/Clincmodal.js",[],"/home/ibr/Documents/drtest/src/component/permition/Tableuser.js",["198"],"import React,{useState} from 'react';\nimport {connect} from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CheckIcon from '@material-ui/icons/Check';\nimport {Add_Action,Edit_Action,Updateuser} from './Table_Action'\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\n\n\n const  Tableuser=({user,Updateuser})=> {\n  const classes = useStyles();\nconst button={\n    actions:[Add_Action,Edit_Action]\n}\n  const [type, settype] = useState({})\n  \n   const [Editting, setEditting] = useState(false)\n\n   const startediting=(i)=>{\n     console.log(i)\n     setEditting(i)\n   }\n   const stopEditting=()=>{\n      Updateuser(type)\n     setEditting(false)\n\n   }\n    const handlechange=(e,id)=>{\n      \n     \n      settype({data:e.target.value,id:id})\n     \n\n\n    }\n  \n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\">FirstName</TableCell>\n            <TableCell align=\"left\">LastName</TableCell>\n            <TableCell align=\"left\">Type</TableCell>\n            <TableCell align=\"left\">Actions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {user && user.map((row,i) => (\n            <TableRow key={i}>\n             \n              <TableCell align=\"left\">{row.firstName} </TableCell>\n              <TableCell align=\"left\">{row.lastName}</TableCell>\n              <TableCell align=\"left\">  { (Editting===i)?<TextField name='Type' onChange={e=>handlechange(e,row.id)} value={type.data} />\n              : row.type}</TableCell>\n              <TableCell aligin=\"left\" >{(Editting===i)?<CheckIcon onClick={e=>stopEditting()} />:<EditIcon onClick={(e)=>startediting(i)} /> }</TableCell>\n              \n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n \nconst mapDispatchToprops=(dispatch)=>{\n  return {\n     Updateuser:(data)=> dispatch(Updateuser(data))\n  }\n}\n\nexport default connect(null,mapDispatchToprops) (Tableuser);","/home/ibr/Documents/drtest/src/component/project/Drclinc.js",["199","200","201","202","203"],"import { useState } from 'react';\nimport { updateresip } from '../../store/actions/projectActions'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { CardContent, Typography, TextField, Grid, Devi, IconButton, Button } from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport { red } from '@material-ui/core/colors';\nimport Avatar from '@material-ui/core/Avatar';\nimport SaveIcon from '@material-ui/icons/Save';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 700,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  texta: {\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n\n  }\n\n}));\n\nfunction Clinclist({ list, pationt ,updateresip,stop}) {\n\n  const classes = useStyles();\n  const [state, setstate] = useState(list.data().resip)\n\n  const handelchange = (e) => {\n    setstate(e.target.value)\n\n  }\n  const handelclick = (e) => {\n    e.preventDefault()\n    stop()\n    //console.log('l',list.id,state)\n    //console.log(moment(list.data().date.seconds).toDate())\n   updateresip([list.id,pationt.id,list.data().done],state)\n  }\n\n  return (\n\n\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\"\"}\n        title={pationt.name}\n        subheader={`B.O.D : ${pationt.bairth}`}\n        action={\n                list.data().done?<CheckCircleOutlineIcon   style={{ color: \"green\" }} onClick={() => console.log(\"OK\")} />\n                 :<CheckCircleOutlineIcon   onClick={() => console.log(\"OK\")} />\n            \n          \n        } />\n      <CardContent>\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <Typography variant=\"body2\"  >\n              mobile : {pationt.mobile}\n            </Typography>\n            <Typography variant=\"body2\"  >\n              price : {list.price}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={6}  >\n            <TextField className={classes.texta} multiline id=\"filled-basic\" label=\" Medical Prescription\"\n              value={state}\n              variant=\"filled\"\n              onChange={handelchange} />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              className={classes.button}\n              startIcon={<SaveIcon />}\n              onClick={handelclick}\n            >\n              Save\n            </Button>\n          </Grid>\n\n        </Grid>\n      </CardContent>\n\n    </Card>\n\n  )\n      }\n\n    const  mapDispatchToProps = (dispatch) => {\n\n    return {\n         updateresip:(val1,val2)=>dispatch(updateresip(val1,val2))\n    }\n  }\n\n\n\nexport default  connect(null,mapDispatchToProps) (Clinclist)\n","/home/ibr/Documents/drtest/src/store/actions/authAction.js",[],"/home/ibr/Documents/drtest/src/store/actions/projectActions.js",["204","205"],"import  firebase from '../../config/fbconfig'\nexport  const createProject=(project)=>{\n    return(dispatch,getState,{ getFirebase })=>{\n      \n        const firestore=getFirebase().firestore();\n        const firebase=getFirebase();\n        const profile=getState().firebase.profile\n        const uid=getState().firebase.auth.uid\n       firestore.collection('projects').add({\n           ...project,\n           authorFirstName:profile.firstName,\n           authorLastName:profile.lastName,\n           authorId:uid,\n           createdAt:new Date()\n       }).then(()=>{\n        dispatch({type:'CREAT_PROJECT',project})\n\n       })\n       .catch((err)=>{\n        dispatch({type:'CREAT_PROJECT_ERR',err})\n\n       })\n\n    }\n}\n\nexport const removeProject=(id)=>{\n    return( dispatch ,getState,{getFirebase})=>{\n        const firestore=getFirebase().firestore() ;\n        firestore.collection('projects').doc(id).delete()\n        .then(()=>{\n            dispatch({type:'REMOVE_PRO'})\n        })\n        .catch((err)=>{\n            dispatch({type:'REMOVE_PRO_ERR',err})\n        })\n    }\n\n}\nexport const Updateproject=(values)=>{\n    console.log(values)\n    return (dispatch,getState,{getFirebase})=>{\n    const firestore=getFirebase().firestore();\n   firestore.collection('projects').doc(values.id)\n   .update({title:values.title,\n    content:values.content\n\n   }).then(()=>{\n        dispatch({type:'UPDATE_SUCCES'})\n\n   }).catch((err)=>{\n\n     dispatch({type:'UPDATE_FAILD',err})\n\n\n   })\n\n   }\n\n}\nexport const snapdata=()=>{\n    return((dispatch,getState,{getFirebase})=>{\n\nconst db=getFirebase().firestore();\n     db.collectionGroup('clinc').where('name', '==', 'x').get().then((snapshot)=>{\n         snapshot.docs.forEach(doc=>{\n           // console.log('snapshot',doc.data())\n         })\n        \n\n            })\n    })\n\n}\nexport const creatClinc=(clinc)=>{\n  return(dispatch,getState,{getFirebase})=>{\n        const firestore=getFirebase().firestore();\n       firestore.collection('projects').doc(clinc.person).collection('clinc').add({...clinc})\n      .then(()=>{\n           console.log('clinc success')\n            dispatch({type:'Addclinc'})  \n            window.location.href=`/project/${clinc.person}`\n       })\n      .catch((err)=>{\n         console.log(err)\n      })\n   }\n\n}\n\n\nexport const  snapclinc= (id)=>{\n   \n  //   console.log('details_id',id)\n   \n  return  ((dispatch,getState,{getFirebase})=>{\n    \n        const db=getFirebase().firestore();\n        const  clinarry=[]\n       \n       \n       db.collectionGroup('clinc').where('person','==',id).onSnapshot(snapshot=>{\n        \n             snapshot.docs.forEach(doc=>{\n               clinarry.push(doc.data())\n           })\n             \n      }\n     )\n\n     return   clinarry\n\n  })\n}\n\nexport  const  reservcl =  (namecl)=>{\n  \n     return  ( async (dispatch,getState,{getFirebase})=>{\n           console.log(namecl)\n         const db=getFirebase().firestore();\n        const snapshot= await db.collectionGroup('clinc').where('name','==',namecl).get()\n\n          return snapshot.docs.map(doc => doc);\n\n //return  dispatch({type:'SERV',baylood:clinarry})\n\n    } )\n\n}\n  export const updateresip=(val,val1)=>{\n    console.log(val1,val[2])\n     return(async(dispatch,getState,{getFirebase})=>{\n       const db=getFirebase().firestore();\n       await  db.collection('projects').doc(val[1]).collection('clinc').doc(val[0])\n      .update({resip:val1,done:!val[2]}).then(()=>{\n        console.log('sucsses')\n      }).catch((err)=>{\n        console.log(err);\n      })\n      \n     \n})\n}","/home/ibr/Documents/drtest/src/component/project/Editformik.js",[],"/home/ibr/Documents/drtest/src/component/project/Clincformik.js",["206","207","208"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport { useHistory } from \"react-router\";\nimport { Formik, Form} from 'formik';\nimport * as yup from 'yup'\nimport { TextField } from 'formik-material-ui';\nimport FormikControl from './formikControl/FormikControl'\nimport {MuiPickersUtilsProvider} from '@material-ui/pickers'\nimport DateFunUtils from '@date-io/date-fns'\nimport {\n    TimePicker,\n    DatePicker,\n    DateTimePicker,\n  } from 'formik-material-ui-pickers';\n  import {creatClinc} from '../../store/actions/projectActions'\nconst Clincformik = ({ person,close ,creatClinc}) => {\n    const history=useHistory()\n    const initialValues = { person: person, name: '', price: '', resip: '', done: false, date:new Date() }\n\n    const validationSchema = yup.object().shape({\n        name: yup.string().required(),\n        price: yup.number().required().positive().integer(),\n    })\n\n    const onSubmit = (values, { setSubmitting }) => {\n        creatClinc(values)\n       // history.push(`/project/${person}`)\n     \n        setTimeout(() => {\n          \n            alert(JSON.stringify(values, null, 2));\n           \n            setSubmitting(false);\n            \n            close()\n          }, 400)\n        \n       \n    }\n\n\n\n    return (\n\n        <Formik\n            initialValues={initialValues}\n\n            validationSchema={validationSchema}\n\n            onSubmit={onSubmit}\n\n        >\n            {\n                formik => (\n                  <MuiPickersUtilsProvider utils={DateFunUtils} >\n                    <Form>\n                     <FormikControl \n                       component={TextField} \n                       control='input' \n                       type='text' name='name'\n                        label='clinc' />\n                    <FormikControl  \n                       component={TextField}\n                         control='input' \n                         type='text'\n                          name='price'\n                           label='price' />\n                            <FormikControl  \n                       component={DatePicker}\n                         control='input' \n                         type='text'\n                          name='date'\n                           label='Date' />\n\n                 <button  type='submit'  >Submit</button>\n                    </Form>\n                    </MuiPickersUtilsProvider >\n                )\n\n\n            }\n\n\n        </Formik>\n\n\n    )\n}\n\nconst mapDispatchToProps=(dispatch)=>{\nreturn {\n       creatClinc: value=>(dispatch(creatClinc(value)))\n    }\n    \n\n}\n\n\nexport default connect(null,mapDispatchToProps)(Clincformik)\n","/home/ibr/Documents/drtest/src/component/permition/Table_Action.js",["209"],"import React from 'react'\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { TablePagination } from '@material-ui/core';\n export function Add_Action(props) {\n     const addclick=(e)=>{\n         props.onClick(e,'add')\n     }\n\n    return (\n        <Tooltip title=\"Add\">\n             <IconButton color=\"primary\" onClick={addclick}>\n          <AddIcon />\n        </IconButton>\n        </Tooltip>\n       \n    )\n}\n\nexport function Edit_Action(props) {\n    const editClick=(e)=>{\n        props.onClick(e,'edit')\n\n    }\n    return(\n       <Tooltip  title=\"Edite\">\n           <IconButton  color='primary' onClick={editClick} >\n        <EditIcon />\n    </IconButton>\n       </Tooltip>\n        \n      \n\n    )}\n\n export  const Updateuser=(data)=>{\n     return(dispatch,getstate,{getFirebase})=>{\n\n        const firestore=getFirebase().firestore();\n        console.log(data);\n         firestore.collection('user').doc(data.id).update({type:data.data})\n         .then(()=>{\n               dispatch({type:'UPDATE_PS'})\n         })\n         .catch((err)=>{\n             dispatch({type:'UPDATE_PF' ,err})\n         })\n\n     }\n }","/home/ibr/Documents/drtest/src/component/project/formikControl/FormikControl.js",["210"],"import React from 'react'\nimport Input from './InputControl'\nfunction FormikControl(props) {\n    const {control,...rest}=props\n    \n    switch (control) {\n        case 'input':\n            return <Input {...rest} />\n            \n            break;\n    \n        default:\n            return null\n    }\n}\n\nexport default FormikControl\n","/home/ibr/Documents/drtest/src/component/project/formikControl/InputControl.js",[],"/home/ibr/Documents/drtest/src/component/project/ProjectSummary.js",["211"],"import React from 'react'\nimport moment from 'moment'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Avatar from '@material-ui/core/Avatar';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      margin: 'auto',\n      maxWidth: 500,\n    },\n    image: {\n      width: 128,\n      height: 128,\n    },\n    img: {\n      margin: 'auto',\n      display: 'block',\n      maxWidth: '100%',\n      maxHeight: '100%',\n    },\n  }));\nfunction ProjectSummary({project,proid}) {\n    const classes = useStyles();\n    const dob=moment(new Date(project.bairth))\n    const todaydate=moment(new Date())\n    const duration=moment.duration(todaydate.diff(dob))\n  console.log('Date of bairth',duration.years(),moment(project.createdAt.toDate().toISOString()).calendar())\n    return (\n        <div className={classes.root}>\n        <Paper className={classes.paper}>\n          <Grid container spacing={2}>\n            <Grid item>\n            <Avatar></Avatar>\n            </Grid>\n            <Grid item xs={12} sm container>\n              <Grid item xs container direction=\"column\" spacing={2}>\n                <Grid item xs>\n                  <Typography gutterBottom variant=\"subtitle1\">\n                   Name: {project.name}\n                  </Typography>\n                  <Typography variant=\"body2\" gutterBottom>\n                   ID: {project.idn}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Mobile:{project.mobile}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"body2\" >\n                   Age: {duration.years()}Y\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"subtitle1\">{moment(project.createdAt.toDate().toISOString()).calendar()}</Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n       \n    )\n}\n\nexport default ProjectSummary\n","/home/ibr/Documents/drtest/src/component/project/report/Print.js",["212"],"import React,{useRef} from 'react';\nimport {useReactToPrint} from 'react-to-print'\nimport {Toreport} from './Toreport'\n export const Print = (props) => {\n    const  {id}=props.match.params\n    const {project}=props.location.state\n  const componentRef= useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n    return (\n        <div>\n           \n            <Toreport ref={componentRef}  project={project} />\n            <button onClick={handlePrint}>Print this out!</button>\n            \n        </div>\n    );\n}\n\n\n \n \n//export default Print;","/home/ibr/Documents/drtest/src/component/project/report/Toreport.js",[],"/home/ibr/Documents/drtest/src/component/project/report/printrepo1.js",["213"],"/home/ibr/Documents/drtest/src/component/project/report/Toreport1.js",[],{"ruleId":"214","severity":1,"message":"215","line":6,"column":38,"nodeType":"216","messageId":"217","endLine":6,"endColumn":45},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"214","severity":1,"message":"222","line":1,"column":9,"nodeType":"216","messageId":"217","endLine":1,"endColumn":14},{"ruleId":"214","severity":1,"message":"223","line":1,"column":26,"nodeType":"216","messageId":"217","endLine":1,"endColumn":31},{"ruleId":"224","severity":1,"message":"225","line":43,"column":49,"nodeType":"226","messageId":"227","endLine":43,"endColumn":51},{"ruleId":"214","severity":1,"message":"228","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":26},{"ruleId":"214","severity":1,"message":"229","line":5,"column":26,"nodeType":"216","messageId":"217","endLine":5,"endColumn":31},{"ruleId":"214","severity":1,"message":"230","line":15,"column":8,"nodeType":"216","messageId":"217","endLine":15,"endColumn":12},{"ruleId":"214","severity":1,"message":"231","line":30,"column":29,"nodeType":"216","messageId":"217","endLine":30,"endColumn":38},{"ruleId":"232","severity":1,"message":"233","line":42,"column":5,"nodeType":"234","endLine":42,"endColumn":16,"suggestions":"235"},{"ruleId":"214","severity":1,"message":"236","line":6,"column":8,"nodeType":"216","messageId":"217","endLine":6,"endColumn":17},{"ruleId":"214","severity":1,"message":"237","line":10,"column":8,"nodeType":"216","messageId":"217","endLine":10,"endColumn":18},{"ruleId":"214","severity":1,"message":"238","line":28,"column":7,"nodeType":"216","messageId":"217","endLine":28,"endColumn":11},{"ruleId":"214","severity":1,"message":"239","line":30,"column":17,"nodeType":"216","messageId":"217","endLine":30,"endColumn":22},{"ruleId":"232","severity":1,"message":"240","line":61,"column":3,"nodeType":"234","endLine":61,"endColumn":11,"suggestions":"241"},{"ruleId":"242","severity":1,"message":"243","line":7,"column":1,"nodeType":"244","endLine":18,"endColumn":2},{"ruleId":"224","severity":1,"message":"225","line":24,"column":35,"nodeType":"226","messageId":"227","endLine":24,"endColumn":37},{"ruleId":"245","severity":1,"message":"246","line":12,"column":17,"nodeType":"247","endLine":12,"endColumn":45},{"ruleId":"248","severity":1,"message":"249","line":13,"column":18,"nodeType":"250","messageId":"251","endLine":13,"endColumn":20},{"ruleId":"214","severity":1,"message":"252","line":1,"column":16,"nodeType":"216","messageId":"217","endLine":1,"endColumn":24},{"ruleId":"214","severity":1,"message":"253","line":1,"column":25,"nodeType":"216","messageId":"217","endLine":1,"endColumn":34},{"ruleId":"214","severity":1,"message":"254","line":26,"column":7,"nodeType":"216","messageId":"217","endLine":26,"endColumn":13},{"ruleId":"214","severity":1,"message":"255","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":14},{"ruleId":"214","severity":1,"message":"256","line":8,"column":52,"nodeType":"216","messageId":"217","endLine":8,"endColumn":56},{"ruleId":"214","severity":1,"message":"257","line":8,"column":58,"nodeType":"216","messageId":"217","endLine":8,"endColumn":68},{"ruleId":"214","severity":1,"message":"258","line":9,"column":8,"nodeType":"216","messageId":"217","endLine":9,"endColumn":19},{"ruleId":"214","severity":1,"message":"259","line":12,"column":8,"nodeType":"216","messageId":"217","endLine":12,"endColumn":14},{"ruleId":"214","severity":1,"message":"260","line":1,"column":9,"nodeType":"216","messageId":"217","endLine":1,"endColumn":17},{"ruleId":"214","severity":1,"message":"261","line":6,"column":15,"nodeType":"216","messageId":"217","endLine":6,"endColumn":23},{"ruleId":"214","severity":1,"message":"262","line":11,"column":5,"nodeType":"216","messageId":"217","endLine":11,"endColumn":15},{"ruleId":"214","severity":1,"message":"263","line":13,"column":5,"nodeType":"216","messageId":"217","endLine":13,"endColumn":19},{"ruleId":"214","severity":1,"message":"264","line":17,"column":11,"nodeType":"216","messageId":"217","endLine":17,"endColumn":18},{"ruleId":"214","severity":1,"message":"265","line":6,"column":10,"nodeType":"216","messageId":"217","endLine":6,"endColumn":25},{"ruleId":"266","severity":1,"message":"267","line":10,"column":13,"nodeType":"268","messageId":"269","endLine":10,"endColumn":19},{"ruleId":"214","severity":1,"message":"270","line":7,"column":8,"nodeType":"216","messageId":"217","endLine":7,"endColumn":18},{"ruleId":"214","severity":1,"message":"271","line":5,"column":13,"nodeType":"216","messageId":"217","endLine":5,"endColumn":15},{"ruleId":"272","severity":2,"message":"273","line":8,"column":25,"nodeType":"216","endLine":8,"endColumn":31},"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","no-native-reassign",["274"],"no-negated-in-lhs",["275"],"'react' is defined but never used.","'state' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Component' is defined but never used.","'Route' is defined but never used.","'arSA' is defined but never used.","'snapclinc' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ar'. Either include it or remove the dependency array.","ArrayExpression",["276"],"'Container' is defined but never used.","'Typography' is defined but never used.","'drid' is assigned a value but never used.","'drres' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchdata' and 'pationt'. Either include them or remove the dependency array.",["277"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'useEffect' is defined but never used.","'button' is assigned a value but never used.","'moment' is defined but never used.","'Devi' is defined but never used.","'IconButton' is defined but never used.","'CardActions' is defined but never used.","'Avatar' is defined but never used.","'firebase' is defined but never used.","'firebase' is assigned a value but never used.","'TimePicker' is defined but never used.","'DateTimePicker' is defined but never used.","'history' is assigned a value but never used.","'TablePagination' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'ButtonBase' is defined but never used.","'id' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useRef\" is called in function \"report1\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","no-global-assign","no-unsafe-negation",{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},"Update the dependencies array to be: [ar, cl, reserv]",{"range":"282","text":"283"},"Update the dependencies array to be: [change, fetchdata, pationt]",{"range":"284","text":"285"},[1195,1206],"[ar, cl, reserv]",[1487,1495],"[change, fetchdata, pationt]"]